{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","personObject","post","id","put","delete","Filter","filter","handleFilterChange","value","onChange","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","handleDelete","name","number","onClick","Persons","peopleToShow","handleDeletePerson","map","i","key","Notification","message","className","text","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","personService","initialPersons","toLowerCase","includes","event","target","preventDefault","find","window","confirm","updatedPerson","returnedPerson","p","concat","setTimeout","catch","error","newPerson","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb1211d0.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n}\n\nconst create = personObject => {\n    const request = axios.post(baseUrl, personObject);\n    return request.then(response => response.data);\n}\n\nconst update = (id, personObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, personObject);\n    return request.then(response => response.data);\n}\n\nconst remove = id => {\n    axios.delete(`${baseUrl}/${id}`);\n}\n\nexport default { getAll, create, update, remove }\n","import React from 'react';\n\nconst Filter = ({ filter, handleFilterChange }) => (\n    <input value={filter} onChange={handleFilterChange} />\n)\n\nexport default Filter\n","import React from 'react';\n\nconst PersonForm = (props) => (\n    <form onSubmit={props.addPerson}>\n        <div>\n            Name: <input value={props.newName} onChange={props.handleNameChange} />\n        </div>\n        <div>\n            Number: <input value={props.newNumber} onChange={props.handleNumberChange} />\n        </div>\n        <div>\n            <button type=\"submit\">Add</button>\n        </div>\n    </form>\n)\n\nexport default PersonForm\n","import React from 'react';\n\nconst Person = ({ person, handleDelete }) => <p>{person.name} {person.number}\n <button onClick={() => handleDelete(person.id, person.name)}>Delete</button></p>;\n\nexport default Person\n","import React from 'react';\nimport Person from './Person';\n\nconst Persons = ({ peopleToShow, handleDeletePerson }) => (\n    <div>\n        {peopleToShow.map((person, i) => <Person key={i} person={person} handleDelete={handleDeletePerson} />)}\n    </div>\n)\n\nexport default Persons\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n    if (!message) {\n        return null\n    }\n\n    return (\n        <div className={message.type}>{message.text}</div>\n    )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport personService from './services/persons';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [filter, setFilter] = useState('');\n    const [message, setMessage] = useState(null);\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            });\n    }, []);\n\n    const addPerson = event => {\n        event.preventDefault();\n\n        const person = persons.find(person => person.name === newName);\n        if (person) {\n           if (window.confirm(`${person.name} is already added to the phonebook, \\\n            replace the old number with the new one?`)) {\n               const updatedPerson = { ...person, number: newNumber };\n               personService\n                   .update(person.id, updatedPerson)\n                   .then(returnedPerson => {\n                       setPersons(persons.filter(p => p.name !== updatedPerson.name)\n                           .concat(returnedPerson));\n                       setNewName('');\n                       setNewNumber('');\n                       setMessage({text: `Updated ${updatedPerson.name}'s number`, type: 'success'});\n                       setTimeout(() => setMessage(null), 5000);\n                   })\n                   .catch(error => {\n                       setPersons(persons.filter(p => p.name !== person.name));\n                       setNewName('');\n                       setNewNumber('');\n                       setMessage({text: `${person.name} has already been deleted from the server`,\n                           type: 'error'});\n                       setTimeout(() => setMessage(null), 5000);\n                   });\n           }\n            return;\n        }\n\n        const newPerson = {name: newName, number: newNumber};\n\n        personService\n            .create(newPerson)\n            .then(returnedPerson => {\n                setPersons(persons.concat(returnedPerson));\n                setNewName('');\n                setNewNumber('');\n                setMessage({text: `Added ${newPerson.name}`, type: 'success'});\n                setTimeout(() => setMessage(null), 5000);\n            })\n            .catch(error => {\n                setMessage({text: error.response.data.error, type: 'error'});\n                setTimeout(() => setMessage(null), 5000);\n            });\n    }\n\n    const handleNameChange = event => {\n        setNewName(event.target.value);\n    }\n\n    const handleNumberChange = event => {\n        setNewNumber(event.target.value);\n    }\n\n    const handleFilterChange = event => {\n        setFilter(event.target.value);\n    }\n\n    const handleDeletePerson = (id, name) => {\n        if (window.confirm(`Are you sure you want to delete ${name}?`)) {\n            console.log('------- id:', id);\n            personService.remove(id);\n            setPersons(persons.filter(person => person.id !== id));\n        }\n    }\n\n    const peopleToShow =\n        filter === ''\n        ? persons\n        : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()));\n\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} />\n            <Filter filter={filter} handleFilterChange={handleFilterChange} />\n            <h2>Add new</h2>\n            <PersonForm newName={newName} newNumber={newNumber} handleNameChange={handleNameChange}\n                handleNumberChange={handleNumberChange} addPerson={addPerson} />\n            <h2>Numbers</h2>\n            <Persons peopleToShow={peopleToShow} handleDeletePerson={handleDeletePerson} />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}