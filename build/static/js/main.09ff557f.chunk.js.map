{"version":3,"sources":["services/persons.js","components/NewPersonForm.js","components/FilterInput.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","personObject","post","id","put","delete","NewPersonForm","addNewPerson","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","trim","name","number","value","onChange","target","type","FilterInput","setFilter","Person","person","handleDelete","onClick","Persons","persons","map","key","Notification","message","className","text","App","setPersons","filter","setMessage","useEffect","personService","initialPersons","catch","error","console","personsToShow","toLowerCase","includes","newPerson","find","person1","person2","window","confirm","updatedPerson","returnedPerson","p","concat","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09ff557f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (personObject) => {\n  const request = axios.post(baseUrl, personObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, personObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, personObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default { getAll, create, update, remove };\n","import React, { useState } from \"react\";\n\nconst NewPersonForm = ({ addNewPerson }) => {\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (newName.trim() === \"\") return;\n    addNewPerson({ name: newName, number: newNumber });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name:{\" \"}\n        <input\n          value={newName}\n          onChange={({ target }) => setNewName(target.value)}\n        />\n      </div>\n      <div>\n        number:{\" \"}\n        <input\n          value={newNumber}\n          onChange={({ target }) => setNewNumber(target.value)}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewPersonForm;\n","import React from \"react\";\n\nconst FilterInput = ({ setFilter }) => (\n  <input onChange={({ target }) => setFilter(target.value)} />\n);\n\nexport default FilterInput;\n","import React from \"react\";\n\nconst Person = ({ person, handleDelete }) => (\n  <div>\n    {person.name}: {person.number}{\" \"}\n    <button onClick={() => handleDelete(person.id, person.name)}>Delete</button>\n  </div>\n);\n\nexport default Person;\n","import React from \"react\";\n\nimport Person from \"./Person\";\n\nconst Persons = ({ persons, handleDelete }) => (\n  <div>\n    {persons.map((person) => (\n      <Person key={person.id} person={person} handleDelete={handleDelete} />\n    ))}\n  </div>\n);\n\nexport default Persons;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (!message) {\n    return null;\n  }\n\n  return <div className={message.type}>{message.text}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\n\nimport personService from \"./services/persons\";\n\nimport NewPersonForm from \"./components/NewPersonForm\";\nimport FilterInput from \"./components/FilterInput\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((initialPersons) => {\n        setPersons(initialPersons);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  const addNewPerson = (newPerson) => {\n    const namesMatch = (person1, person2) =>\n      person1.toLowerCase() === person2.toLowerCase();\n\n    const person = persons.find((person) =>\n      namesMatch(person.name, newPerson.name)\n    );\n\n    if (person) {\n      if (\n        window.confirm(\n          `${newPerson.name} is already added to the phonebook, replace the old number with the new one?`\n        )\n      ) {\n        const updatedPerson = { ...person, number: newPerson.number };\n        personService\n          .update(person.id, updatedPerson)\n          .then((returnedPerson) => {\n            setPersons(\n              persons\n                .filter((p) => p.name !== updatedPerson.name)\n                .concat(returnedPerson)\n            );\n            setMessage({\n              text: `Updated ${updatedPerson.name}'s number`,\n              type: \"success\",\n            });\n            setTimeout(() => setMessage(null), 5000);\n          })\n          .catch((error) => {\n            setPersons(persons.filter((p) => p.name !== person.name));\n            setMessage({\n              text: `${person.name} has already been deleted from the server`,\n              type: \"error\",\n            });\n            setTimeout(() => setMessage(null), 5000);\n          });\n      }\n\n      return;\n    }\n\n    personService\n      .create(newPerson)\n      .then((returnedPerson) => {\n        setPersons([...persons, returnedPerson]);\n        setMessage({\n          text: `Added ${returnedPerson.name}`,\n          type: \"success\",\n        });\n        setTimeout(() => setMessage(null), 5000);\n      })\n      .catch((error) => {\n        setMessage({ text: error.response.data.error, type: \"error\" });\n        setTimeout(() => setMessage(null), 5000);\n        console.error(error);\n      });\n  };\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Are you sure you want to delete ${name}?`)) {\n      personService.remove(id);\n      setPersons(persons.filter((person) => person.id !== id));\n    }\n  };\n\n  const personsToShow =\n    filter === \"\"\n      ? persons\n      : persons.filter((person) =>\n          person.name.toLowerCase().includes(filter.toLowerCase())\n        );\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} />\n      <FilterInput setFilter={setFilter} />\n      <h2>Add new</h2>\n      <NewPersonForm addNewPerson={addNewPerson} />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} handleDelete={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}